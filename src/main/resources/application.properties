#/*
# * Copyright 2019 Aerospike, Inc.
# *
# * Portions may be licensed to Aerospike, Inc. under one or more contributor
# * license agreements WHICH ARE COMPATIBLE WITH THE APACHE LICENSE, VERSION 2.0.
# *
# * Licensed under the Apache License, Version 2.0 (the "License"); you may not
# * use this file except in compliance with the License. You may obtain a copy of
# * the License at http://www.apache.org/licenses/LICENSE-2.0
# *
# * Unless required by applicable law or agreed to in writing, software
# * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# * License for the specific language governing permissions and limitations under
# * the License.
# */


/* Notes for operations used internally */

RestClient.Policy.sendKey.notes=Send user defined key in addition to hash digest on both reads and writes.
RestClient.Policy.consistencyLevel.notes=How replicas should be consulted in a read operation to provide the desired consistency guarantee.
RestClient.Policy.replica.notes=Replica algorithm used to determine the target node for a single record command.
RestClient.Policy.keytype.notes=The Type of the userKey.
RestClient.Policy.linearizeRead.notes=Force reads to be linearized for server namespaces that support strong consistency mode.
RestClient.Policy.bins.notes=Optionally specify a set of bins to return when fetching a record. If omitted, all bins will be returned.
RestClient.Policy.readmodeAP.notes=Read policy for AP (availability) namespaces. How duplicates should be consulted in a read operation. Only makes a difference during migrations and only applicable in AP mode.
RestClient.Policy.readmodeSC.notes=Read policy for SC (strong consistency) namespaces. Determines SC read consistency options.


RestClient.WritePolicy.generation.notes=Expected generation. Generation is the number of times a record has been modified (including creation) on the server.
RestClient.WritePolicy.expiration.notes=Record expiration. Also known as ttl (time to live). Seconds record will live before being removed by the server.
RestClient.WritePolicy.durableDelete.notes=If the transaction results in a record deletion, leave a tombstone for the record.
RestClient.WritePolicy.commitLevel.notes=Desired consistency guarantee when committing a transaction on the server.
RestClient.WritePolicy.generationPolicy.notes=Qualify how to handle record writes based on record generation.

RestClient.Record.namespace.notes=Namespace for the record; equivalent to database name.
RestClient.Record.set.notes=Set for the record; equivalent to database table.
RestClient.Record.userkey.notes=Userkey for the record.
RestClient.Record.bins.notes=Bins to be stored in the record. This is a mapping from a string bin name to a value. \
Value can be a String, integer, floating point number, list, map, bytearray, or GeoJSON value. Bytearrays and GeoJSON can \
only be sent using MessagePack\n\
example: {"bin1":5, "bin2":"hello", "bin3": [1,2,3], "bin4": {"one": 1}}

RestClient.KVS.GetRecord.notes=Return the metadata and bins for a record.
RestClient.KVS.UpdateRecord.notes=Merge the provided bins into the record.
RestClient.KVS.CreateRecord.notes=Create a new record with the provided bins into the record.
RestClient.KVS.ReplaceRecord.notes=Replace the bins of the specified record.
RestClient.KVS.DeleteRecord.notes=Delete the specified record.

RestClient.Truncate.dateQueryParam.notes=All records last updated before this date/time will be truncated. If not specified, all records will be truncated.\n\
This is a string representation of a date time utilizing the ISO-8601 extended offset date-time format. example: 2019-12-03T10:15:30+01:00
RestClient.Operate.operate.notes=Perform multiple operations atomically on the specified record.
RestClient.Truncate.cutoff.notes=All records last updated before this date/time will be truncated. If not specified, all records will be truncated.

# Disable error message from swagger UI about invalid default value
logging.level.io.swagger.models.parameters.AbstractSerializableParameter=ERROR
# Turn off Spring banner
spring.main.banner-mode=off


