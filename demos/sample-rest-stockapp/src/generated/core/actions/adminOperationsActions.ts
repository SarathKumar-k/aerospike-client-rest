/*
 * WARNING: DO NOT EDIT THIS FILE. This file is generated by yarn gen. Any changes will be overwritten.
 */

import { ActionWithPayload } from './Action';
import { Action } from 'redux';
import { RestClientError, RestClientRole, User } from '../api';
import SimpleResponse from '../types/SimpleResponse';

export const GET_ROLES_SUCCESSFUL = 'GET_ROLES_SUCCESSFUL';
export type GetRolesSuccessful = ActionWithPayload<typeof GET_ROLES_SUCCESSFUL, SimpleResponse>;

export const getRolesSuccessful = (res: SimpleResponse): GetRolesSuccessful => ({
    type: GET_ROLES_SUCCESSFUL,
    payload: res,
});

export const GET_ROLES_FAILED = 'GET_ROLES_FAILED';
export type GetRolesFailed = ActionWithPayload<typeof GET_ROLES_FAILED, RestClientError>;

export const getRolesFailed = (res: RestClientError): GetRolesFailed => ({
    type: GET_ROLES_FAILED,
    payload: res,
});

export const GET_ROLES_IN_PROGRESS = 'GET_ROLES_IN_PROGRESS';
export type GetRolesInProgress = Action<typeof GET_ROLES_IN_PROGRESS>;

export const getRolesInProgress = (): GetRolesInProgress => ({ type: GET_ROLES_IN_PROGRESS });

export type GetRolesAction = GetRolesSuccessful | GetRolesFailed | GetRolesInProgress;

export const CREATE_ROLE_SUCCESSFUL = 'CREATE_ROLE_SUCCESSFUL';
export type CreateRoleSuccessful = ActionWithPayload<typeof CREATE_ROLE_SUCCESSFUL, SimpleResponse>;

export const createRoleSuccessful = (res: SimpleResponse): CreateRoleSuccessful => ({
    type: CREATE_ROLE_SUCCESSFUL,
    payload: res,
});

export const CREATE_ROLE_FAILED = 'CREATE_ROLE_FAILED';
export type CreateRoleFailed = ActionWithPayload<typeof CREATE_ROLE_FAILED, RestClientError>;

export const createRoleFailed = (res: RestClientError): CreateRoleFailed => ({
    type: CREATE_ROLE_FAILED,
    payload: res,
});

export const CREATE_ROLE_IN_PROGRESS = 'CREATE_ROLE_IN_PROGRESS';
export type CreateRoleInProgress = Action<typeof CREATE_ROLE_IN_PROGRESS>;

export const createRoleInProgress = (): CreateRoleInProgress => ({ type: CREATE_ROLE_IN_PROGRESS });

export type CreateRoleAction = CreateRoleSuccessful | CreateRoleFailed | CreateRoleInProgress;

export const GET_ROLE_SUCCESSFUL = 'GET_ROLE_SUCCESSFUL';
export type GetRoleSuccessful = ActionWithPayload<typeof GET_ROLE_SUCCESSFUL, RestClientRole>;

export const getRoleSuccessful = (res: RestClientRole): GetRoleSuccessful => ({
    type: GET_ROLE_SUCCESSFUL,
    payload: res,
});

export const GET_ROLE_FAILED = 'GET_ROLE_FAILED';
export type GetRoleFailed = ActionWithPayload<typeof GET_ROLE_FAILED, RestClientError>;

export const getRoleFailed = (res: RestClientError): GetRoleFailed => ({
    type: GET_ROLE_FAILED,
    payload: res,
});

export const GET_ROLE_IN_PROGRESS = 'GET_ROLE_IN_PROGRESS';
export type GetRoleInProgress = Action<typeof GET_ROLE_IN_PROGRESS>;

export const getRoleInProgress = (): GetRoleInProgress => ({ type: GET_ROLE_IN_PROGRESS });

export type GetRoleAction = GetRoleSuccessful | GetRoleFailed | GetRoleInProgress;

export const DROP_ROLE_SUCCESSFUL = 'DROP_ROLE_SUCCESSFUL';
export type DropRoleSuccessful = ActionWithPayload<typeof DROP_ROLE_SUCCESSFUL, SimpleResponse>;

export const dropRoleSuccessful = (res: SimpleResponse): DropRoleSuccessful => ({
    type: DROP_ROLE_SUCCESSFUL,
    payload: res,
});

export const DROP_ROLE_FAILED = 'DROP_ROLE_FAILED';
export type DropRoleFailed = ActionWithPayload<typeof DROP_ROLE_FAILED, RestClientError>;

export const dropRoleFailed = (res: RestClientError): DropRoleFailed => ({
    type: DROP_ROLE_FAILED,
    payload: res,
});

export const DROP_ROLE_IN_PROGRESS = 'DROP_ROLE_IN_PROGRESS';
export type DropRoleInProgress = Action<typeof DROP_ROLE_IN_PROGRESS>;

export const dropRoleInProgress = (): DropRoleInProgress => ({ type: DROP_ROLE_IN_PROGRESS });

export type DropRoleAction = DropRoleSuccessful | DropRoleFailed | DropRoleInProgress;

export const GRANT_PRIVILEGES_SUCCESSFUL = 'GRANT_PRIVILEGES_SUCCESSFUL';
export type GrantPrivilegesSuccessful = ActionWithPayload<
    typeof GRANT_PRIVILEGES_SUCCESSFUL,
    SimpleResponse
>;

export const grantPrivilegesSuccessful = (res: SimpleResponse): GrantPrivilegesSuccessful => ({
    type: GRANT_PRIVILEGES_SUCCESSFUL,
    payload: res,
});

export const GRANT_PRIVILEGES_FAILED = 'GRANT_PRIVILEGES_FAILED';
export type GrantPrivilegesFailed = ActionWithPayload<
    typeof GRANT_PRIVILEGES_FAILED,
    RestClientError
>;

export const grantPrivilegesFailed = (res: RestClientError): GrantPrivilegesFailed => ({
    type: GRANT_PRIVILEGES_FAILED,
    payload: res,
});

export const GRANT_PRIVILEGES_IN_PROGRESS = 'GRANT_PRIVILEGES_IN_PROGRESS';
export type GrantPrivilegesInProgress = Action<typeof GRANT_PRIVILEGES_IN_PROGRESS>;

export const grantPrivilegesInProgress = (): GrantPrivilegesInProgress => ({
    type: GRANT_PRIVILEGES_IN_PROGRESS,
});

export type GrantPrivilegesAction =
    | GrantPrivilegesSuccessful
    | GrantPrivilegesFailed
    | GrantPrivilegesInProgress;

export const REVOKE_PRIVILEGES_SUCCESSFUL = 'REVOKE_PRIVILEGES_SUCCESSFUL';
export type RevokePrivilegesSuccessful = ActionWithPayload<
    typeof REVOKE_PRIVILEGES_SUCCESSFUL,
    SimpleResponse
>;

export const revokePrivilegesSuccessful = (res: SimpleResponse): RevokePrivilegesSuccessful => ({
    type: REVOKE_PRIVILEGES_SUCCESSFUL,
    payload: res,
});

export const REVOKE_PRIVILEGES_FAILED = 'REVOKE_PRIVILEGES_FAILED';
export type RevokePrivilegesFailed = ActionWithPayload<
    typeof REVOKE_PRIVILEGES_FAILED,
    RestClientError
>;

export const revokePrivilegesFailed = (res: RestClientError): RevokePrivilegesFailed => ({
    type: REVOKE_PRIVILEGES_FAILED,
    payload: res,
});

export const REVOKE_PRIVILEGES_IN_PROGRESS = 'REVOKE_PRIVILEGES_IN_PROGRESS';
export type RevokePrivilegesInProgress = Action<typeof REVOKE_PRIVILEGES_IN_PROGRESS>;

export const revokePrivilegesInProgress = (): RevokePrivilegesInProgress => ({
    type: REVOKE_PRIVILEGES_IN_PROGRESS,
});

export type RevokePrivilegesAction =
    | RevokePrivilegesSuccessful
    | RevokePrivilegesFailed
    | RevokePrivilegesInProgress;

export const GET_USERS_SUCCESSFUL = 'GET_USERS_SUCCESSFUL';
export type GetUsersSuccessful = ActionWithPayload<typeof GET_USERS_SUCCESSFUL, SimpleResponse>;

export const getUsersSuccessful = (res: SimpleResponse): GetUsersSuccessful => ({
    type: GET_USERS_SUCCESSFUL,
    payload: res,
});

export const GET_USERS_FAILED = 'GET_USERS_FAILED';
export type GetUsersFailed = ActionWithPayload<typeof GET_USERS_FAILED, RestClientError>;

export const getUsersFailed = (res: RestClientError): GetUsersFailed => ({
    type: GET_USERS_FAILED,
    payload: res,
});

export const GET_USERS_IN_PROGRESS = 'GET_USERS_IN_PROGRESS';
export type GetUsersInProgress = Action<typeof GET_USERS_IN_PROGRESS>;

export const getUsersInProgress = (): GetUsersInProgress => ({ type: GET_USERS_IN_PROGRESS });

export type GetUsersAction = GetUsersSuccessful | GetUsersFailed | GetUsersInProgress;

export const CREATE_USER_SUCCESSFUL = 'CREATE_USER_SUCCESSFUL';
export type CreateUserSuccessful = ActionWithPayload<typeof CREATE_USER_SUCCESSFUL, SimpleResponse>;

export const createUserSuccessful = (res: SimpleResponse): CreateUserSuccessful => ({
    type: CREATE_USER_SUCCESSFUL,
    payload: res,
});

export const CREATE_USER_FAILED = 'CREATE_USER_FAILED';
export type CreateUserFailed = ActionWithPayload<typeof CREATE_USER_FAILED, RestClientError>;

export const createUserFailed = (res: RestClientError): CreateUserFailed => ({
    type: CREATE_USER_FAILED,
    payload: res,
});

export const CREATE_USER_IN_PROGRESS = 'CREATE_USER_IN_PROGRESS';
export type CreateUserInProgress = Action<typeof CREATE_USER_IN_PROGRESS>;

export const createUserInProgress = (): CreateUserInProgress => ({ type: CREATE_USER_IN_PROGRESS });

export type CreateUserAction = CreateUserSuccessful | CreateUserFailed | CreateUserInProgress;

export const GET_USER_SUCCESSFUL = 'GET_USER_SUCCESSFUL';
export type GetUserSuccessful = ActionWithPayload<typeof GET_USER_SUCCESSFUL, User>;

export const getUserSuccessful = (res: User): GetUserSuccessful => ({
    type: GET_USER_SUCCESSFUL,
    payload: res,
});

export const GET_USER_FAILED = 'GET_USER_FAILED';
export type GetUserFailed = ActionWithPayload<typeof GET_USER_FAILED, RestClientError>;

export const getUserFailed = (res: RestClientError): GetUserFailed => ({
    type: GET_USER_FAILED,
    payload: res,
});

export const GET_USER_IN_PROGRESS = 'GET_USER_IN_PROGRESS';
export type GetUserInProgress = Action<typeof GET_USER_IN_PROGRESS>;

export const getUserInProgress = (): GetUserInProgress => ({ type: GET_USER_IN_PROGRESS });

export type GetUserAction = GetUserSuccessful | GetUserFailed | GetUserInProgress;

export const DROP_USER_SUCCESSFUL = 'DROP_USER_SUCCESSFUL';
export type DropUserSuccessful = ActionWithPayload<typeof DROP_USER_SUCCESSFUL, SimpleResponse>;

export const dropUserSuccessful = (res: SimpleResponse): DropUserSuccessful => ({
    type: DROP_USER_SUCCESSFUL,
    payload: res,
});

export const DROP_USER_FAILED = 'DROP_USER_FAILED';
export type DropUserFailed = ActionWithPayload<typeof DROP_USER_FAILED, RestClientError>;

export const dropUserFailed = (res: RestClientError): DropUserFailed => ({
    type: DROP_USER_FAILED,
    payload: res,
});

export const DROP_USER_IN_PROGRESS = 'DROP_USER_IN_PROGRESS';
export type DropUserInProgress = Action<typeof DROP_USER_IN_PROGRESS>;

export const dropUserInProgress = (): DropUserInProgress => ({ type: DROP_USER_IN_PROGRESS });

export type DropUserAction = DropUserSuccessful | DropUserFailed | DropUserInProgress;

export const CHANGE_PASSWORD_SUCCESSFUL = 'CHANGE_PASSWORD_SUCCESSFUL';
export type ChangePasswordSuccessful = ActionWithPayload<
    typeof CHANGE_PASSWORD_SUCCESSFUL,
    SimpleResponse
>;

export const changePasswordSuccessful = (res: SimpleResponse): ChangePasswordSuccessful => ({
    type: CHANGE_PASSWORD_SUCCESSFUL,
    payload: res,
});

export const CHANGE_PASSWORD_FAILED = 'CHANGE_PASSWORD_FAILED';
export type ChangePasswordFailed = ActionWithPayload<
    typeof CHANGE_PASSWORD_FAILED,
    RestClientError
>;

export const changePasswordFailed = (res: RestClientError): ChangePasswordFailed => ({
    type: CHANGE_PASSWORD_FAILED,
    payload: res,
});

export const CHANGE_PASSWORD_IN_PROGRESS = 'CHANGE_PASSWORD_IN_PROGRESS';
export type ChangePasswordInProgress = Action<typeof CHANGE_PASSWORD_IN_PROGRESS>;

export const changePasswordInProgress = (): ChangePasswordInProgress => ({
    type: CHANGE_PASSWORD_IN_PROGRESS,
});

export type ChangePasswordAction =
    | ChangePasswordSuccessful
    | ChangePasswordFailed
    | ChangePasswordInProgress;

export const GRANT_ROLES_SUCCESSFUL = 'GRANT_ROLES_SUCCESSFUL';
export type GrantRolesSuccessful = ActionWithPayload<typeof GRANT_ROLES_SUCCESSFUL, SimpleResponse>;

export const grantRolesSuccessful = (res: SimpleResponse): GrantRolesSuccessful => ({
    type: GRANT_ROLES_SUCCESSFUL,
    payload: res,
});

export const GRANT_ROLES_FAILED = 'GRANT_ROLES_FAILED';
export type GrantRolesFailed = ActionWithPayload<typeof GRANT_ROLES_FAILED, RestClientError>;

export const grantRolesFailed = (res: RestClientError): GrantRolesFailed => ({
    type: GRANT_ROLES_FAILED,
    payload: res,
});

export const GRANT_ROLES_IN_PROGRESS = 'GRANT_ROLES_IN_PROGRESS';
export type GrantRolesInProgress = Action<typeof GRANT_ROLES_IN_PROGRESS>;

export const grantRolesInProgress = (): GrantRolesInProgress => ({ type: GRANT_ROLES_IN_PROGRESS });

export type GrantRolesAction = GrantRolesSuccessful | GrantRolesFailed | GrantRolesInProgress;

export const REVOKE_ROLES_SUCCESSFUL = 'REVOKE_ROLES_SUCCESSFUL';
export type RevokeRolesSuccessful = ActionWithPayload<
    typeof REVOKE_ROLES_SUCCESSFUL,
    SimpleResponse
>;

export const revokeRolesSuccessful = (res: SimpleResponse): RevokeRolesSuccessful => ({
    type: REVOKE_ROLES_SUCCESSFUL,
    payload: res,
});

export const REVOKE_ROLES_FAILED = 'REVOKE_ROLES_FAILED';
export type RevokeRolesFailed = ActionWithPayload<typeof REVOKE_ROLES_FAILED, RestClientError>;

export const revokeRolesFailed = (res: RestClientError): RevokeRolesFailed => ({
    type: REVOKE_ROLES_FAILED,
    payload: res,
});

export const REVOKE_ROLES_IN_PROGRESS = 'REVOKE_ROLES_IN_PROGRESS';
export type RevokeRolesInProgress = Action<typeof REVOKE_ROLES_IN_PROGRESS>;

export const revokeRolesInProgress = (): RevokeRolesInProgress => ({
    type: REVOKE_ROLES_IN_PROGRESS,
});

export type RevokeRolesAction = RevokeRolesSuccessful | RevokeRolesFailed | RevokeRolesInProgress;

export type AdminOperationsAction =
    | GetRolesAction
    | CreateRoleAction
    | GetRoleAction
    | DropRoleAction
    | GrantPrivilegesAction
    | RevokePrivilegesAction
    | GetUsersAction
    | CreateUserAction
    | GetUserAction
    | DropUserAction
    | ChangePasswordAction
    | GrantRolesAction
    | RevokeRolesAction;
